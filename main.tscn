[gd_scene load_steps=21 format=2]

[ext_resource path="res://addons/godot-xr-tools/misc/VR_Common_Shader_Cache.tscn" type="PackedScene" id=1]
[ext_resource path="res://main.shader" type="Shader" id=2]
[ext_resource path="res://addons/godot-openvr/scenes/ovr_controller.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]
script/source = "extends Spatial

func _ready():
	get_viewport().use_multiple_cameras = true
	
	# Find the interface and initialise
	var arvr_interface = ARVRServer.find_interface(\"OpenVR\")
	if arvr_interface and arvr_interface.initialize():
		# switch to ARVR mode
		get_viewport().arvr = true
		
		# keep linear color space, not needed and thus ignored with the GLES2 renderer
		get_viewport().keep_3d_linear = true
		
		# make sure vsync is disabled or we'll be limited to 60fps
		OS.vsync_enabled = false
		
		# up our physics to 90fps to get in sync with our rendering
		Engine.iterations_per_second= 90
"

[sub_resource type="ProceduralSky" id=2]

[sub_resource type="Environment" id=3]
background_mode = 2
background_sky = SubResource( 2 )
ambient_light_color = Color( 0.741176, 0.741176, 0.741176, 1 )

[sub_resource type="GDScript" id=5]
script/source = "extends Spatial

func _process(delta):
	rotate(Vector3(1, 2, 3).normalized(), delta)
"

[sub_resource type="OpenSimplexNoise" id=6]
period = 92.8

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[sub_resource type="SpatialMaterial" id=8]
albedo_color = Color( 1, 0.0705882, 0.0705882, 1 )
albedo_texture = SubResource( 7 )
metallic = 0.12
roughness = 0.35

[sub_resource type="ShaderMaterial" id=9]
shader = ExtResource( 2 )

[sub_resource type="GDScript" id=11]
script/source = "extends Spatial

func _process(delta):
	rotate(Vector3.UP, delta * 0.2)
"

[sub_resource type="OpenSimplexNoise" id=13]
period = 47.8

[sub_resource type="NoiseTexture" id=14]
seamless = true
noise = SubResource( 13 )

[sub_resource type="SpatialMaterial" id=15]
albedo_color = Color( 0.85098, 0.85098, 0.85098, 1 )
albedo_texture = SubResource( 14 )

[sub_resource type="Environment" id=19]

[sub_resource type="Environment" id=20]
background_keep = true

[sub_resource type="PlaneMesh" id=16]
size = Vector2( 0.001, 0.001 )

[sub_resource type="SpatialMaterial" id=17]

[sub_resource type="GDScript" id=18]
script/source = "extends Spatial

func _physics_process(delta):
	# we keep this in line with our camera but we remove the tilt
	var new_transform = get_node(\"../ARVRCamera\").transform
	
	var new_basis = Basis()
	new_basis.z = Vector3(new_transform.basis.z.x, 0.0, new_transform.basis.z.z).normalized()
	if new_basis.z.length() > 0.5:
		new_basis.y - Vector3(0.0, 1.0, 0.0)
		new_basis.x = new_basis.y.cross(new_basis.z)
		new_transform.basis = new_basis
	
		transform = new_transform
	else:
		# we're looking straight up or down, ignore this
		pass
"

[node name="Spatial" type="Spatial"]
script = SubResource( 1 )

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 3 )

[node name="Outer" type="Spatial" parent="."]

[node name="Rotating" type="Spatial" parent="Outer"]
script = SubResource( 5 )

[node name="CSGTorus" type="CSGTorus" parent="Outer/Rotating"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.506094, 0 )
layers = 4
inner_radius = 10.2293
outer_radius = 11.5901

[node name="CSGTorus2" type="CSGTorus" parent="Outer/Rotating"]
transform = Transform( -4.37114e-08, 1, 0, -1, -4.37114e-08, 0, 0, 0, 1, 0, 0.506094, 0 )
layers = 4
inner_radius = 10.2293
outer_radius = 11.5901

[node name="CSGTorus3" type="CSGTorus" parent="Outer/Rotating"]
transform = Transform( 1.91069e-15, -4.37114e-08, -1, -1, -4.37114e-08, 0, -4.37114e-08, 1, -4.37114e-08, 0, 0.506094, 0 )
layers = 4
inner_radius = 10.2293
outer_radius = 11.5901

[node name="Stationary" type="Spatial" parent="Outer"]

[node name="CSGBox" type="CSGBox" parent="Outer/Stationary"]
layers = 4
invert_faces = true
width = 28.421
height = 28.767
depth = 24.0484
material = SubResource( 8 )

[node name="CSGBox2" type="CSGBox" parent="Outer/Stationary"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -2.8596, 1.63197, -4.76837e-07 )
layers = 4
width = 0.5
height = 0.5
depth = 0.5

[node name="CSGBox3" type="CSGBox" parent="Outer/Stationary"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 2.87697, 1.06491, 0 )
layers = 4
width = 0.5
height = 0.5
depth = 0.5

[node name="CSGBox4" type="CSGBox" parent="Outer/Stationary"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.0589252, -0.485946, -2.88627 )
layers = 4
width = 11.9241
height = 0.686702
depth = 0.5

[node name="CSGBox5" type="CSGBox" parent="Outer/Stationary"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0566099, 1.64129, 5.4145 )
layers = 4
width = 1.20525
height = 1.86874
depth = 0.440179

[node name="CSGBox9" type="CSGBox" parent="Outer/Stationary"]
transform = Transform( 0.921097, 0, 0.389333, 0, 1, 0, -0.389333, 0, 0.921097, -2.91306, 0.751413, 1.12611 )
layers = 4
width = 0.5
height = 0.5
depth = 0.5

[node name="CSGBox8" type="CSGBox" parent="Outer/Stationary"]
transform = Transform( 0.921097, 0, 0.389333, 0, 1, 0, -0.389333, 0, 0.921097, 2.89065, 0.184353, -1.10733 )
layers = 4
width = 0.5
height = 0.5
depth = 0.5

[node name="CSGBox7" type="CSGBox" parent="Outer/Stationary"]
transform = Transform( 0.921097, 0, 0.389333, 0, 1, 0, -0.389333, 0, 0.921097, -2.98941, 0.760733, -5.42465 )
layers = 4
width = 0.5
height = 1.22767
depth = 0.5

[node name="CSGBox6" type="CSGBox" parent="Outer/Stationary"]
transform = Transform( 0.921097, 0, 0.389333, 0, 1, 0, -0.389333, 0, 0.921097, 3.19228, 0.760733, 2.50933 )
layers = 4
width = 0.852217
height = 1.72572
depth = 0.5

[node name="OmniLight2" type="OmniLight" parent="Outer/Stationary"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0782006, 3.10234, 0 )
layers = 4
light_color = Color( 0.823529, 0.603922, 0.603922, 1 )
light_energy = 2.62
omni_range = 238.5

[node name="ViewBox" type="Spatial" parent="."]

[node name="ViewBox2" type="CSGBox" parent="ViewBox"]
transform = Transform( 0.639046, 0.723276, -0.26171, -0.691292, 0.689261, 0.216873, 0.337246, 0.0423262, 0.940465, 0, 1.00096, 0 )
layers = 8
width = 1.0
height = 1.0
depth = 1.0
material = SubResource( 9 )

[node name="Inner" type="Spatial" parent="."]

[node name="CameraRotate" type="Spatial" parent="Inner"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.732679, 0 )
visible = false
script = SubResource( 11 )

[node name="InnerScene" type="Spatial" parent="Inner"]

[node name="Floor" type="CSGBox" parent="Inner/InnerScene"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.76317, 0 )
layers = 2
invert_faces = true
width = 5.0
height = 3.60211
depth = 10.2469
material = SubResource( 15 )

[node name="CSGBox2" type="CSGBox" parent="Inner/InnerScene"]
transform = Transform( -0.425498, 0.89493, -0.134357, -0.741751, -0.429946, -0.514734, -0.518417, -0.119358, 0.846757, -1.14619, 2.05757, -0.365562 )
layers = 2
width = 0.5
height = 0.5
depth = 0.5

[node name="CSGBox3" type="CSGBox" parent="Inner/InnerScene"]
transform = Transform( 0.431565, 0.887925, -0.159192, -0.711403, 0.226492, -0.665287, -0.554669, 0.400364, 0.729418, 1.28562, 0.427267, 0 )
layers = 2
width = 0.5
height = 0.5
depth = 0.5

[node name="CSGBox4" type="CSGBox" parent="Inner/InnerScene"]
transform = Transform( 0.611914, 0, 0.790925, 0.425441, 0.843007, -0.32915, -0.666755, 0.537903, 0.515847, -0.065702, 0.259393, 0.981593 )
layers = 2
width = 0.5
height = 0.5
depth = 0.5

[node name="OmniLight" type="OmniLight" parent="Inner/InnerScene"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.0782006, 1.17736, 0 )
layers = 2
light_color = Color( 0.639216, 0.690196, 1, 1 )
light_energy = 1.65
omni_range = 29.2

[node name="OVRFirstPerson" type="ARVROrigin" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 2.75031 )

[node name="Outer" type="ARVRCamera" parent="OVRFirstPerson"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.85, 0 )
cull_mask = 1048564
environment = SubResource( 19 )
depth = 1
fov = 65.0
near = 0.01
far = 1000.01

[node name="ViewBox" type="ARVRCamera" parent="OVRFirstPerson"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.85, 0 )
cull_mask = 1048568
environment = SubResource( 20 )
depth = 2
fov = 65.0
near = 0.01
far = 1000.01

[node name="ARVRCamera" type="ARVRCamera" parent="OVRFirstPerson"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.85, 0 )
cull_mask = 1048562
environment = SubResource( 20 )
depth = 3
fov = 65.0
near = 0.01
far = 1000.01

[node name="shader_cache" parent="OVRFirstPerson/ARVRCamera" instance=ExtResource( 1 )]

[node name="Controller" type="MeshInstance" parent="OVRFirstPerson/ARVRCamera/shader_cache"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -2 )
mesh = SubResource( 16 )
material/0 = SubResource( 17 )

[node name="HUD_Anchor" type="Spatial" parent="OVRFirstPerson"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.85, 0 )
script = SubResource( 18 )

[node name="Left_Hand" parent="OVRFirstPerson" instance=ExtResource( 3 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -0.5, 1.25, 0 )

[node name="Right_Hand" parent="OVRFirstPerson" instance=ExtResource( 3 )]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.5, 1.25, 0 )
controller_id = 2
